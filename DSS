import hashlib

# Generated with OpenSSL
private_key = 0x0 # THIS IS A PLACEHOLDER FOR YOUR PRIVATE KEY, YOU CAN USE OPENSSL AND HEXDUMPS TO FETCH
public_modulo = 0x00e85d35a47f2684f4fd85a7946e8844b622bdae7975b47647c8016fa2506631a235aa89923e75a82d199fad80ef6227b995cb10a58c74887221012deb57c4e11ef409de3715e73d3a765ad25da638434924ddc8d4910c2c16df89120472ed766ab38df69ce585bdbce28ba9d006224092932918d4eef7ce2f568e59fe38e3699a1ce1392e7fef6a7c1c1f154d1a4478b73518a93f4376d9e0bb92175147e4024a1dd3624a2ce44fa195513e2e0c5cc88d97afb0943550ec48fb94e7a3854401fb9a25a458028b990cbc9a5720862ce4bc53f7e5c6ca656db9e1d201b58d7577df7637a961cfbbe862b205244a0b0049a2680dee94d7daa8da3a7b4d8cfbb58c156f7d2cb059047e3ccad47ebf5e9bb850efca7f3138f9486cd5ef1b94f03dabadcd1d964490e1963bfa8e23e17105058cc001951b5ca752124ca8f8349ef6332c33ac364c0f51eb5599f52133c3238c8d0b9ca299781798b351d3af621770181fc37c11b60a6c7ac531794d408931f6a76835839c4071bc4e36ec1944788d803990b139a9877190629b6fc7dc815049be2a5e2d5266feb88f3208391f9c77a06e88fd6190a0d1e598457ca49c5ab6312d32173c97328818a34178aabe45057589ee5a191191ace141923e65473173c42b3f7434fbdce0e1382f4c344559b33e272493c7b3e129231c3175633b05483f728394bad8c0a0d28e633881faeffc8f3f

public_exponent = 65537

def sign(message):
    #Digest the message
    messageDigest = long(hashlib.sha224(message).hexdigest(), 16);
    print 'Message Digest:', messageDigest

    #get the signature on the message hash
    digitalSignature =pow(messageDigest, private_key, public_modulo) # optimized modular exponentiation
    print 'Digital Signature:', digitalSignature
    return digitalSignature

def verify(message, signature):
    #Digest the message
    messageDigest = long(hashlib.sha224(message).hexdigest(), 16)
    print 'Message Digest:', messageDigest

    #Generate the message hash from the signature
    computedMessageDigest = pow(signature, public_exponent, public_modulo)
    print 'Computed Message Digest (From Signature)', computedMessageDigest

    #Verify that the two signatures match
    if (messageDigest == computedMessageDigest):
        return True
    return False
